<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xinyibi.mapper.FileInfoMapper">
  <resultMap id="BaseResultMap" type="com.xinyibi.pojo.FileInfo">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="file_name" jdbcType="VARCHAR" property="fileName" />
    <result column="file_size" jdbcType="DOUBLE" property="fileSize" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="mime" jdbcType="VARCHAR" property="mime" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="path" jdbcType="VARCHAR" property="path" />
    <result column="account_id" jdbcType="INTEGER" property="accountId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.xinyibi.pojo.FileInfo">
    <result column="body" jdbcType="LONGVARBINARY" property="body" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, file_name, file_size, create_date, mime, status, path, account_id
  </sql>
  <sql id="Blob_Column_List">
    body
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.xinyibi.pojo.FileInfoExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from file_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.xinyibi.pojo.FileInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from file_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from file_info
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from file_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.xinyibi.pojo.FileInfoExample">
    delete from file_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xinyibi.pojo.FileInfo">
<!--   	<selectKey keyColumn="id" keyProperty="id" resultType="java.lang.Long">select </selectKey> -->
    insert into file_info (id, file_name, file_size, 
      create_date, mime, status, 
      path, account_id, body
      )
    values (#{id,jdbcType=BIGINT}, #{fileName,jdbcType=VARCHAR}, #{fileSize,jdbcType=DOUBLE}, 
      #{createDate,jdbcType=TIMESTAMP}, #{mime,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{path,jdbcType=VARCHAR}, #{accountId,jdbcType=INTEGER}, #{body,jdbcType=LONGVARBINARY}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xinyibi.pojo.FileInfo">
    insert into file_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="fileName != null">
        file_name,
      </if>
      <if test="fileSize != null">
        file_size,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="mime != null">
        mime,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="path != null">
        path,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="body != null">
        body,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="fileName != null">
        #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="fileSize != null">
        #{fileSize,jdbcType=DOUBLE},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="mime != null">
        #{mime,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="path != null">
        #{path,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=INTEGER},
      </if>
      <if test="body != null">
        #{body,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xinyibi.pojo.FileInfoExample" resultType="java.lang.Long">
    select count(*) from file_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update file_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.fileName != null">
        file_name = #{record.fileName,jdbcType=VARCHAR},
      </if>
      <if test="record.fileSize != null">
        file_size = #{record.fileSize,jdbcType=DOUBLE},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.mime != null">
        mime = #{record.mime,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.path != null">
        path = #{record.path,jdbcType=VARCHAR},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=INTEGER},
      </if>
      <if test="record.body != null">
        body = #{record.body,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update file_info
    set id = #{record.id,jdbcType=BIGINT},
      file_name = #{record.fileName,jdbcType=VARCHAR},
      file_size = #{record.fileSize,jdbcType=DOUBLE},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      mime = #{record.mime,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      path = #{record.path,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=INTEGER},
      body = #{record.body,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update file_info
    set id = #{record.id,jdbcType=BIGINT},
      file_name = #{record.fileName,jdbcType=VARCHAR},
      file_size = #{record.fileSize,jdbcType=DOUBLE},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      mime = #{record.mime,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      path = #{record.path,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xinyibi.pojo.FileInfo">
    update file_info
    <set>
      <if test="fileName != null">
        file_name = #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="fileSize != null">
        file_size = #{fileSize,jdbcType=DOUBLE},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="mime != null">
        mime = #{mime,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="path != null">
        path = #{path,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=INTEGER},
      </if>
      <if test="body != null">
        body = #{body,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.xinyibi.pojo.FileInfo">
    update file_info
    set file_name = #{fileName,jdbcType=VARCHAR},
      file_size = #{fileSize,jdbcType=DOUBLE},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      mime = #{mime,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      path = #{path,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=INTEGER},
      body = #{body,jdbcType=LONGVARBINARY}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xinyibi.pojo.FileInfo">
    update file_info
    set file_name = #{fileName,jdbcType=VARCHAR},
      file_size = #{fileSize,jdbcType=DOUBLE},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      mime = #{mime,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      path = #{path,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>