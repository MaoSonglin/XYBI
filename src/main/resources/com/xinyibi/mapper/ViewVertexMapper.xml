<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xinyibi.mapper.ViewVertexMapper">
  <resultMap id="BaseResultMap" type="com.xinyibi.pojo.ViewVertex">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="table_id" jdbcType="VARCHAR" property="tableId" />
    <result column="next_vertext_id" jdbcType="BIGINT" property="nextVertextId" />
    <result column="field_id" jdbcType="VARCHAR" property="fieldId" />
    <result column="view_id" jdbcType="VARCHAR" property="viewId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, table_id, next_vertext_id, field_id, view_id
  </sql>
  <select id="selectByExample" parameterType="com.xinyibi.pojo.ViewVertexExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from view_vertex
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from view_vertex
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from view_vertex
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.xinyibi.pojo.ViewVertexExample">
    delete from view_vertex
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xinyibi.pojo.ViewVertex">
    insert into view_vertex (id, table_id, next_vertext_id, 
      field_id, view_id)
    values (#{id,jdbcType=BIGINT}, #{tableId,jdbcType=VARCHAR}, #{nextVertextId,jdbcType=BIGINT}, 
      #{fieldId,jdbcType=VARCHAR}, #{viewId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xinyibi.pojo.ViewVertex">
    insert into view_vertex
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="tableId != null">
        table_id,
      </if>
      <if test="nextVertextId != null">
        next_vertext_id,
      </if>
      <if test="fieldId != null">
        field_id,
      </if>
      <if test="viewId != null">
        view_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="tableId != null">
        #{tableId,jdbcType=VARCHAR},
      </if>
      <if test="nextVertextId != null">
        #{nextVertextId,jdbcType=BIGINT},
      </if>
      <if test="fieldId != null">
        #{fieldId,jdbcType=VARCHAR},
      </if>
      <if test="viewId != null">
        #{viewId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xinyibi.pojo.ViewVertexExample" resultType="java.lang.Long">
    select count(*) from view_vertex
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update view_vertex
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.tableId != null">
        table_id = #{record.tableId,jdbcType=VARCHAR},
      </if>
      <if test="record.nextVertextId != null">
        next_vertext_id = #{record.nextVertextId,jdbcType=BIGINT},
      </if>
      <if test="record.fieldId != null">
        field_id = #{record.fieldId,jdbcType=VARCHAR},
      </if>
      <if test="record.viewId != null">
        view_id = #{record.viewId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update view_vertex
    set id = #{record.id,jdbcType=BIGINT},
      table_id = #{record.tableId,jdbcType=VARCHAR},
      next_vertext_id = #{record.nextVertextId,jdbcType=BIGINT},
      field_id = #{record.fieldId,jdbcType=VARCHAR},
      view_id = #{record.viewId,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xinyibi.pojo.ViewVertex">
    update view_vertex
    <set>
      <if test="tableId != null">
        table_id = #{tableId,jdbcType=VARCHAR},
      </if>
      <if test="nextVertextId != null">
        next_vertext_id = #{nextVertextId,jdbcType=BIGINT},
      </if>
      <if test="fieldId != null">
        field_id = #{fieldId,jdbcType=VARCHAR},
      </if>
      <if test="viewId != null">
        view_id = #{viewId,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xinyibi.pojo.ViewVertex">
    update view_vertex
    set table_id = #{tableId,jdbcType=VARCHAR},
      next_vertext_id = #{nextVertextId,jdbcType=BIGINT},
      field_id = #{fieldId,jdbcType=VARCHAR},
      view_id = #{viewId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <!-- 多表连接查询 -->
  <resultMap type="com.xinyibi.model.ViewGraph" id="ViewGraphResultMap">
  	<id column="vertex_id" property="id"/>
  	<result column="table_id" jdbcType="VARCHAR" property="tableId" />
    <result column="next_vertext_id" jdbcType="BIGINT" property="nextVertextId" />
    <result column="field_id" jdbcType="BIGINT" property="fieldId" />
    <result column="view_id" jdbcType="VARCHAR" property="viewId" />
    <association property="table" javaType="com.xinyibi.pojo.DataTableInfo" >
    	<id column="data_table_id" jdbcType="VARCHAR" property="id" />
	    <result column="table_name" jdbcType="VARCHAR" property="tableName" />
	    <result column="table_zh_ch_name" jdbcType="VARCHAR" property="tableZhChName" />
	    <result column="type" jdbcType="VARCHAR" property="type" />
	    <result column="table_add_time" jdbcType="TIMESTAMP" property="addTime" />
	    <result column="db_id" jdbcType="VARCHAR" property="dbId" />
    </association>
    <association property="field" javaType="com.xinyibi.pojo.TableFieldInfo">
    	<id column="field_id" jdbcType="VARCHAR" property="id"/>
    	<result column="field_name" jdbcType="VARCHAR" property="fieldName" />
	    <result column="field_zh_ch_name" jdbcType="VARCHAR" property="fieldZhChName" />
	    <result column="jdbc_type" jdbcType="VARCHAR" property="jdbcType" />
	    <result column="java_type" jdbcType="VARCHAR" property="javaType" />
	    <result column="length" jdbcType="INTEGER" property="length" />
	    <result column="primary_key" jdbcType="BIT" property="primaryKey" />
	    <result column="foreign_key" jdbcType="BIT" property="foreignKey" />
	    <result column="comment" jdbcType="VARCHAR" property="comment" />
	    <result column="field_add_time" jdbcType="TIMESTAMP" property="addTime" />
	    <result column="tb_id" jdbcType="VARCHAR" property="tbId" />
    </association>
  </resultMap>
  <sql id="BaseSelect">
  	SELECT
		vv.id vertex_id,
		vv.next_vertext_id next_vertext_id,
		vv.view_id view_id,
		vv.field_id field_id,
		vv.table_id table_id,
		dt.id data_table_id,
		dt.table_name table_name,
		dt.table_zh_ch_name table_zh_ch_name,
		dt.type type,
		dt.db_id db_id,
		dt.add_time table_add_time,
		tf.id field_id,
		tf.field_name field_name,
		tf.field_zh_ch_name field_zh_ch_name,
		tf.java_type java_type,
		tf.jdbc_type jdbc_type,
		tf.foreign_key foreign_key,
		tf.primary_key primary_key,
		tf.add_time field_add_time,
		tf.length length,
		tf.tb_id tb_id,
		tf.`comment` `comment`
	FROM
		view_vertex vv
	JOIN data_table_info dt ON dt.id = vv.table_id
	JOIN table_field_info tf ON tf.id = vv.field_id
  </sql>
  <select id="findGraphById" parameterType="java.lang.Long" resultMap="ViewGraphResultMap">
  	<include refid="BaseSelect"/>
  	where vv.id = #{id}
  </select>
  
</mapper>